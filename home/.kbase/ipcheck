#!/bin/bash
# Script written by Warith Al Maawali  
# (c) 2018 Founder of Eagle Eye Digital Solutions
# http://www.digi77.com
# http://www.om77.net
# script starts here:




cd $(dirname $0) 
source Globalconfig;



# detect empty arguments
if [ $# -eq 0 ]; then
	echo "No arguments entered"
	
	#pause 'Press [Enter] key to exit...or Ctrl c to quit the script and run it again correctly'	
        #exit 1
fi


# Accept command line arguments
while [ $# -gt 0 ]
do
    case "$1" in
    -a)  myAction=$2 ; shift;;       
	--)	shift; break;;
	-*)
	    echo >&2 \
	    "usage: $0 [-v] [-f file] [file ...]"
	    exit 1;;
	*)  break;;	# terminate while loop
    esac
    shift
done
 


if [[ "$myAction" == *digi* ]]
then     
	# Clean the file
	rm -f $Mykodachi_path/workingdomain.txt;
	url2="https://www.digi77.com/software/vpn/ipcheckplain.php";
	sudo echo $url2 > $Mykodachi_path/workingdomain.txt;
	sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/workingdomain.txt;
	echo "1" > $Mykodachi_path/ipretrievetype.txt
	sudo echo "Digi77" > $Mykodachi_path/iptypeletter;
	#notify-send -i $notifyIcon "IP will be fetched from Digi77.com";
	
    #exit;
fi

if [[ "$myAction" == *other* ]]
then   
	# Clean the file
	rm -f $Mykodachi_path/workingdomain.txt;
	for url in $(cat $Mykodachi_path/domains.txt) 
	do 
		# Only chech if we don't have important tasks by systemhealth
		actionpickervalue=$(cat $Mykodachi_path/actionpicker);
		if [[ "$actionpickervalue" == 0 ]]
		then
			
			# Request the ip from URL 
			x=$(sudo curl --silent --fail -m 30 "$url");
			x=$(echo $x|xargs);
			# If reply is valid ip address then accept the domain
			if [[ "$x" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then
				sudo echo "URL exists: $url = IP: $x"
				echo $url >> $Mykodachi_path/workingdomain.txt;
				echo "0" > $Mykodachi_path/ipretrievetype.txt;
				echo "other sites" > $Mykodachi_path/iptypeletter;
				sudo chown $LOGED_USER.$LOGED_USER $Mykodachi_path/workingdomain.txt;
			else
				echo "URL does not exist: $url or ip is bad: $x"
			fi 
		fi
		
	done
	#notify-send -i $notifyIcon "IP will be fetched from other IP service providers";
fi

  
exit 1;
 
